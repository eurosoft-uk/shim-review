# Finalized Dockerfile for AArch64 (shim-aa64.efi cross-compilation and reproducibility)
FROM ubuntu:22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive \
    SOURCE_DATE_EPOCH=1600000000

COPY . /shim-review
WORKDIR /root

# Install fixed dependencies
RUN apt update && \
    apt install -y \
    wget \
    git=1:2.34.1-1ubuntu1.12 \
    build-essential=12.9ubuntu3 \
    gcc=4:11.2.0-1ubuntu1 \
    g++=4:11.2.0-1ubuntu1 \
    make=4.3-4.1build1 \
    binutils=2.38-4ubuntu2.8 \
    libssl-dev=3.0.2-0ubuntu1.19 \
    ca-certificates=20240203~22.04.1 \
    dos2unix=7.4.2-2 \
    pesign=0.112-6 \
    xxd=2:8.2.3995-1ubuntu2.24 \
    xz-utils=5.2.5-2ubuntu1 \
    bsdmainutils=12.1.7+nmu3ubuntu2 \
    gcc-aarch64-linux-gnu=4:11.2.0-1ubuntu1 \
    g++-aarch64-linux-gnu=4:11.2.0-1ubuntu1 && \
    apt clean && rm -rf /var/lib/apt/lists/*

RUN apt-cache policy git build-essential gcc g++ make binutils libssl-dev ca-certificates dos2unix pesign xxd xz-utils bsdmainutils gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

ARG SHIM_VERSION=16.0
ARG SHIM_TARBALL_URL=https://github.com/rhboot/shim/releases/download/${SHIM_VERSION}/shim-${SHIM_VERSION}.tar.bz2
ARG SHIM_TARBALL=shim-${SHIM_VERSION}.tar.bz2
ARG SHIM_SHA256=d503f778dc75895d3130da07e2ff23d2393862f95b6cd3d24b10cbd4af847217
ARG SBAT_FILE=/shim-review/data/sbat.csv
ARG EUROSOFT_CERT=/shim-review/data/pub.der

RUN echo "Expecting SHA256: ${SHIM_SHA256}" && \
    wget -q ${SHIM_TARBALL_URL} && \
    echo "${SHIM_SHA256}  ${SHIM_TARBALL}" | sha256sum -c -

RUN tar xjf ${SHIM_TARBALL} && mv shim-${SHIM_VERSION} shim
WORKDIR /root/shim

COPY Make.local.aa64 Make.local

RUN make clean && \
    make CROSS_COMPILE=aarch64-linux-gnu- ARCH=aarch64 \
         VENDOR_CERT_FILE=/shim-review/data/pub.der \
         SBAT=/shim-review/data/sbat.csv

# Copy and strip binaries
RUN cp /shim-review/data/shimaa64.efi /tmp/ref-shim.efi && \
    cp /root/shim/shimaa64.efi /tmp/built-shim.efi && \
    aarch64-linux-gnu-objcopy --strip-unneeded /tmp/built-shim.efi /tmp/built-shim-stripped.efi && \
    aarch64-linux-gnu-objcopy --strip-unneeded /tmp/ref-shim.efi /tmp/ref-shim-stripped.efi

# Diff disassembly
RUN aarch64-linux-gnu-objdump -d /tmp/ref-shim.efi | awk '/^Disassembly of section .text:/,/^Disassembly of section/' > /tmp/ref.dis && \
    aarch64-linux-gnu-objdump -d /tmp/built-shim.efi | awk '/^Disassembly of section .text:/,/^Disassembly of section/' > /tmp/built.dis && \
    diff -u /tmp/ref.dis /tmp/built.dis > /tmp/dis.diff || true

# Section comparison logic
RUN mkdir -p /out 
RUN check_and_diff_section() { \
        SECTION="$1"; FILE1="$2"; FILE2="$3"; NAME="$4"; \
        if aarch64-linux-gnu-objdump -h "$FILE1" | grep -q "$SECTION"; then \
            echo "🔍 Comparing section $SECTION"; \
            aarch64-linux-gnu-objdump -s -j "$SECTION" "$FILE1" | tail -n +3 > /tmp/ref.$NAME || exit 1; \
            aarch64-linux-gnu-objdump -s -j "$SECTION" "$FILE2" | tail -n +3 > /tmp/built.$NAME || exit 1; \
            diff -u /tmp/ref.$NAME /tmp/built.$NAME > /out/${SECTION#\.}.diff || true; \
        else echo "⚠️  Section $SECTION not found, skipping."; fi; \
    }; \
    check_and_diff_section .rodata /tmp/ref-shim.efi /tmp/built-shim.efi rodata && \
    check_and_diff_section .sbat   /tmp/ref-shim.efi /tmp/built-shim.efi sbat && \
    check_and_diff_section .reloc  /tmp/ref-shim.efi /tmp/built-shim.efi reloc

# Final artifacts
RUN cp /tmp/ref-shim.efi /out/shimaa64-reference.efi && \
    cp /tmp/built-shim.efi /out/shimaa64.efi && \
    cp /tmp/built-shim-stripped.efi /out/shimaa64-stripped.efi && \
    cp /tmp/ref.dis /out/ref.dis && \
    cp /tmp/built.dis /out/built.dis && \
    cp /tmp/dis.diff /out/disassemblyaa64.diff

# Toolchain info
RUN sha256sum /usr/bin/gcc /usr/bin/g++ /usr/bin/ld /usr/bin/objcopy /usr/bin/make /usr/bin/git > /out/toolchain-hashes.txt && \
    uname -a > /out/toolchain-info.txt && \
    gcc --version >> /out/toolchain-info.txt && \
    ld --version >> /out/toolchain-info.txt && \
    make --version >> /out/toolchain-info.txt && \
    git --version >> /out/toolchain-info.txt && \
    aarch64-linux-gnu-objcopy --version >> /out/toolchain-info.txt \
    echo "VENDOR_CERT_FILE=${EUROSOFT_CERT}" >> /out/toolchain-info.txt && \
    echo "SBAT_FILE=${SBAT_FILE}" >> /out/toolchain-info.txt
